---
kind: pipeline
name: linux-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: test
  image: golang:1.11
  commands:
  - go test -v ./...
  volumes:
  - name: gopath
    path: /go

- name: build
  image: golang:1.11
  commands:
  - "go build -ldflags \"-extldflags \\\\\"-static\\\\\"\" -o release/linux/amd64/drone-server github.com/drone/drone/cmd/drone-server"
  - CGO_ENABLED=0 go build -o release/linux/amd64/drone-agent github.com/drone/drone/cmd/drone-agent
  - CGO_ENABLED=0 go build -o release/linux/amd64/drone-controller github.com/drone/drone/cmd/drone-controller
  volumes:
  - name: gopath
    path: /go
  when:
    event:
    - push
    - pull_request
    - tag

- name: publish-server
  pull: default
  image: plugins/docker
  settings:
    dockerfile: docker/Dockerfile.server.linux.amd64
    registry: eu.gcr.io
    repo: eu.gcr.io/unicorn-985/drone
    tags:
      - "${DRONE_COMMIT}"
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username
  when:
    event:
    - push
    - pull_request
    - tag

volumes:
- name: gopath
  temp: {}
